stl_series_weekly <- stl_ts_weekly$time.series %>%
data.frame() %>%
mutate(week = trend_weekly[["week"]], original=trend_weekly$inspections)
ggplot(stl_series_weekly,aes(x=week)) +
geom_line(aes(y=original,color="Original")) +
geom_line(aes(y=trend,color="Trend")) +
scale_color_manual(values=c("#EDCA3A","#1FBAD6")) +
labs(title="Original vs. Trend", x="Date", y="Inspections") +
theme(legend.position="right")
grid.arrange(
ggplot(stl_series_weekly,aes(x=week)) +
geom_line(aes(y=seasonal, color="Seasonal")) +
scale_color_manual(values=c("#1FBAD6")) +
labs(x="Date", y="Seasonal") +
theme(legend.position="none"),
ggplot(stl_series_weekly,aes(x=week)) +
geom_line(aes(y=trend, color="Trend")) +
scale_color_manual(values=c("#1FBAD6")) +
labs(x="Date", y="Trend") +
theme(legend.position="none"),
ggplot(stl_series_weekly,aes(x=week)) +
geom_line(aes(y=remainder, color="Remainder")) +
scale_color_manual(values=c("#1FBAD6")) +
labs(x="Date", y="Remainder") +
theme(legend.position="none"),
ggplot(stl_series_weekly,aes(x=week)) +
geom_line(aes(y=original, color = "Original")) +
scale_color_manual(values=c("#1FBAD6")) +
labs(x="Date", y="Original") +
theme(legend.position="none"),
ncol=2, nrow=2, top="STL Results"
)
stl_forecast_weekly <- forecast(stl_ts_weekly)
plot(stl_forecast_weekly)
trend_weekly <- stl_series %>%
mutate(week = (function(x) {x - days((wday(x) - 2) %% 7)})(date)) %>%
ddply(.(week),summarize,inspections=sum(trend))
stl_ts_weekly <- trend_weekly$inspections %>%
ts(frequency = 43) %>%
stl(s.window = "periodic")
stl_series_weekly <- stl_ts_weekly$time.series %>%
data.frame() %>%
mutate(week = trend_weekly[["week"]], original=trend_weekly$inspections)
ggplot(stl_series_weekly,aes(x=week)) +
geom_line(aes(y=original,color="Original")) +
geom_line(aes(y=trend,color="Trend")) +
scale_color_manual(values=c("#EDCA3A","#1FBAD6")) +
labs(title="Original vs. Trend", x="Date", y="Inspections") +
theme(legend.position="right")
grid.arrange(
ggplot(stl_series_weekly,aes(x=week)) +
geom_line(aes(y=seasonal, color="Seasonal")) +
scale_color_manual(values=c("#1FBAD6")) +
labs(x="Date", y="Seasonal") +
theme(legend.position="none"),
ggplot(stl_series_weekly,aes(x=week)) +
geom_line(aes(y=trend, color="Trend")) +
scale_color_manual(values=c("#1FBAD6")) +
labs(x="Date", y="Trend") +
theme(legend.position="none"),
ggplot(stl_series_weekly,aes(x=week)) +
geom_line(aes(y=remainder, color="Remainder")) +
scale_color_manual(values=c("#1FBAD6")) +
labs(x="Date", y="Remainder") +
theme(legend.position="none"),
ggplot(stl_series_weekly,aes(x=week)) +
geom_line(aes(y=original, color = "Original")) +
scale_color_manual(values=c("#1FBAD6")) +
labs(x="Date", y="Original") +
theme(legend.position="none"),
ncol=2, nrow=2, top="STL Results"
)
stl_forecast_weekly <- forecast(stl_ts_weekly)
plot(stl_forecast_weekly)
swirl()
library(swirl)
swirl()
?aov
df <- read.csv(file.choose(), header=T)
head(df)
head(df,10)
summary(df)
?sd
names(df)
aov(df$last_28d_tr ~ df$tag)
tr.aov <- aov(df$last_28d_tr ~ df$tag)
summary(tr.aov)
sh.aov <- aov(df$last_28d_sh ~ df$tag)
summary(sh.aov)
remove(list=ls())
?strptime
?aov
source('~/Dropbox (Uber Technologies)/Notes/151120_summary_and_aov.R', echo=TRUE)
names(df)
head(df)
source('~/Dropbox (Uber Technologies)/Notes/151120_summary_and_aov.R', echo=TRUE)
names(df)
remove(list=ls())
df <- read.csv(file.choose(), header=T)
names(df)
head(df)
head(df,10)
head(df,100)
summary(df)
mean(df$last_28d_tr)
mean(df$last_28d_sh)
# get sd of our data
sd(df$last_28d_tr)
sd(df$last_28d_sh)
?aov
tr.aov <- aov(df$last_28d_tr ~ df$tag)
summary(tr.aov)
sh.aov <- aov(df$last_28d_sh ~ df$tag)
summary(sh.aov)
tr.aov <- aov(df$last_28d_tr ~ df$tag,projections = T)
summary(tr.aov)
tr.aov <- aov(df$last_28d_tr ~ df$tag,projections = T)
tr.aov
source('~/.active-rstudio-document', echo=TRUE)
summary(tr.aov)
?ttest
?t.test
head(df,100)
summary(df)
swirl()
5+7
?t.test
remove(list=ls())
(297.76+7.82)*.25
?tost
??tost
library(equivalence)
??tost
?tost
data <- read.csv(file.choose(),stringsAsFactors=T,header=T)
head(data)
lm(data$lifetime_completed_trips ~ data.first_completed_trip_surge_multiplier)
summary(lm(data$lifetime_completed_trips ~ data$first_completed_trip_surge_multiplier))
?lm
summary(aov(data$lifetime_completed_trips ~ data$first_completed_trip_surge_multiplier))
?plot
plot(data$first_completed_trip_surge_multiplier,data$lifetime_completed_trips)
plot(data$first_completed_trip_surge_multiplier,data$lifetime_completed_trips)
data <- read.csv(file.choose(),stringsAsFactors=T,header=T)
names(data)
summary(aov(data$lifetime_completed_trips ~ data$first_completed_trip_surge_multiplier))
summary(aov(data$lifetime_completed_trips ~ data$first_trip_driver_adjusted_fare_usd))
plot(data$lifetime_completed_trips,data$first_trip_driver_adjusted_fare_usd)
data <- read.csv(file.choose(),stringsAsFactors=T,header=T)
names(data)
summary(lm(data$lifetime_completed_trips ~ data$max_surge))
summary(lm(data$lifetime_completed_trips ~ data$max_fare))
lm(data$lifetime_completed_trips ~ data$max_fare)
summary(lm(data$lifetime_completed_trips ~ data$max_surge))
summary(lm(data$lifetime_completed_trips ~ data$max_fare))
summary(aov(data$lifetime_completed_trips ~ data$max_surge))
summary(aov(data$lifetime_completed_trips ~ data$max_fare))
plot(data$lifetime_completed_trips,data$max_fare)
summary(lm(data$lifetime_completed_trips ~ data$max_surge))
summary(lm(data$lifetime_completed_trips ~ data$avg_surge))
data <- read.csv(file.choose(),stringsAsFactors=T,header=T)
names(data)
summary(lm(data$lifetime_completed_trips ~ data$max_surge))
summary(lm(data$lifetime_completed_trips ~ data$avg_surge))
summary(lm(data$lifetime_completed_trips ~ data$max_fare))
data <- read.csv(file.choose(),stringsAsFactors=T,header=T)
names(data)
summary(lm(data$lifetime_completed_trips ~ data$max_surge))
summary(lm(data$lifetime_completed_trips ~ data$avg_surge))
summary(lm(data$lifetime_completed_trips ~ data$surges))
summary(lm(data$lifetime_completed_trips ~ data$max_fare))
summary(lm(data$lifetime_completed_trips ~ data$avg_fare))
data <- read.csv(file.choose(),stringsAsFactors=T,header=T)
names(data)
?ddply
?reshape
?datediff
??datediff
?difftime
difftime(data$first_completed_trip_timestamp,data$signup_day)
cast_timestamp(data$signup_day)
cast_timestamp <- function(timestamp_column){
referral_fraud_data[[timestamp_column]] <- strptime(referral_fraud_data[[timestamp_column]],"%Y-%m-%d %H:%M:%S")
class(referral_fraud_data[[timestamp_column]])
}
cast_timestamp(signup_day)
cast_timestamp(data$signup_day)
head(data,2)
strptime(data$signup_day,"%m/%d/%Y %H:%M")
head(data$signup_day)
head(strptime(data$signup_day,"%M/%d/%Y %H:%M"))
head(strptime(data$signup_day,"%m/%d/%Y %H:%M"),5)
head(strptime(data$signup_day,"%m/%d/%Y"),5)
head(strptime(data$signup_day,"%m/%D/%Y"),5)
head(strptime(data$signup_day,"%m/%d/%y"),5)
head(strptime(data$signup_day,"%m/%d/%y h:m"),5)
head(strptime(data$signup_day,"%m/%d/%y %h:%m"),5)
head(strptime(data$signup_day,"%m/%d/%y %H:%M"),5)
head(data$signup_day,5)
head(strptime(data$signup_day,"%m/%d/%y %H:%M"),5)
raw_data <- read.csv(file.choose(),stringsAsFactors=T,header=T)
remove(data)
head(raw_data)
strptime(data$first_completed_trip_timestamp,"%m/%d/%y %H:%M")
head(data$first_completed_trip_timestamp,25)
strptime(raw_data$first_completed_trip_timestamp,"%m/%d/%y %H:%M")
?difftime
difftime(strptime(raw_data$first_completed_trip_timestamp,"%m/%d/%y %H:%M"),strptime(raw_data$signup_day,"%m/%d/%y %H:%M"))
?data.frame
df <- data.frame() %>%
cbind(raw_data$signup_day) %>%
cbind(raw_data$first_completed_trip_timestamp)
library(lubridate)
df <- data.frame() %>%
cbind(raw_data$signup_day) %>%
cbind(raw_data$first_completed_trip_timestamp)
library(plyr)
df <- data.frame() %>%
cbind(raw_data$signup_day) %>%
cbind(raw_data$first_completed_trip_timestamp)
?cbind
cbind(df,raw_data$signup_day)
cbind(df,raw_data$first_completed_trip_timestamp)
head(df)
df <- data.frame()
cbind(df,raw_data$signup_day)
cbind(df,raw_data$first_completed_trip_timestamp)
df
head(df)
df <- data.frame(raw_data$signup_day,raw_data$first_completed_trip_timestamp)
df
head(df)
cbind(raw_data,difftime(strptime(raw_data$first_completed_trip_timestamp,"%m/%d/%y %H:%M"),strptime(raw_data$signup_day,"%m/%d/%y %H:%M")))
head(raw_data)
raw_data <- read.csv(file.choose(),stringsAsFactors=T,header=T)
cbind(raw_data,difftime(strptime(raw_data$first_completed_trip_timestamp,"%m/%d/%y %H:%M"),strptime(raw_data$signup_day,"%m/%d/%y %H:%M")))
head(raw_data)
names(raw_data)
raw_data$time_delta <- difftime(strptime(raw_data$first_completed_trip_timestamp,"%m/%d/%y %H:%M"),strptime(raw_data$signup_day,"%m/%d/%y %H:%M"))
head(raw_data)
head(raw_data,25)
difftime(strptime(raw_data$first_completed_trip_timestamp,"%m/%d/%y %H:%M"),strptime(raw_data$signup_day,"%m/%d/%y %H:%M"))
raw_data$time_delta <- difftime(strptime(raw_data$first_completed_trip_timestamp,"%m/%d/%y %H:%M"),strptime(raw_data$signup_day,"%m/%d/%y %H:%M"))
head(raw_data)
difftime(strptime(raw_data$first_completed_trip_timestamp,"%m/%d/%y %H:%M"),strptime(raw_data$signup_day,"%m/%d/%y %H:%M"))
?difftime
difftime(strptime(raw_data$first_completed_trip_timestamp,"%m/%d/%y %H:%M"),strptime(raw_data$signup_day,"%m/%d/%y %H:%M"),units="days")
raw_data <- read.csv(file.choose(),stringsAsFactors=T,header=T)
head(raw_data)
raw_data <- read.csv(file.choose(),stringsAsFactors=T,header=T)
names(raw_data)
tost(x=raw_data$control, y=raw_data$treatment, alpha=0.05, epsilon=sd(c(raw_data$treatment, raw_data$control)))
head(x=raw_data$control)
tost(x=raw_data$control, y=raw_data$treatment, alpha=0.05, epsilon=sd(c(raw_data$treatment, raw_data$control)))
raw_data <- read.csv(file.choose(),stringsAsFactors=T,header=T)
names(raw_data)
tost(x=raw_data$control, y=raw_data$treatment, alpha=0.05, epsilon=sd(c(raw_data$treatment, raw_data$control)))
head(raw_data)
raw_data <- read.csv(file.choose(),stringsAsFactors=T,header=T)
names(raw_data)
tost(x=raw_data$control, y=raw_data$treatment, alpha=0.05, epsilon=sd(c(raw_data$treatment, raw_data$control)))
tost(x=raw_data$control, y=raw_data$treatment, alpha=0.05)
raw_data <- read.csv(file.choose(),stringsAsFactors=T,header=T)
head(raw_data)
tost(x=raw_data$control, y=raw_data$treatment, alpha=0.05, epsilon=sd(c(raw_data$treatment, raw_data$control)))
c(raw_data$treatment, raw_data$control))
sd(c(raw_data$treatment, raw_data$control)))
sd(raw_data_treatment)
sd(raw_data$treatment)
sd(raw_data$treatment,raw_data$control)
sd(c(raw_data$treatment,raw_data$control)
)
sd(c(raw_data$control, raw_data$treatment))
tail(raw_data$control)
sd(na.omit(c(raw_data$control, raw_data$treatment)))
tost(x=raw_data$control, y=raw_data$treatment, alpha=0.05, epsilon=sd(na.omit(c(raw_data$control, raw_data$treatment))))
summary(tost(x=raw_data$control, y=raw_data$treatment, alpha=0.05, epsilon=sd(na.omit(c(raw_data$control, raw_data$treatment)))))
tost(x=raw_data$control, y=raw_data$treatment, alpha=0.05, epsilon=sd(na.omit(c(raw_data$control, raw_data$treatment))))
tost(x=raw_data$control, y=raw_data$treatment, alpha=0.10, epsilon=sd(na.omit(c(raw_data$control, raw_data$treatment))))
tost(x=raw_data$control, y=raw_data$treatment, alpha=0.05, epsilon=sd(na.omit(c(raw_data$control, raw_data$treatment))))
library(equivalnce)
raw_data <- read.csv(file.choose(),stringsAsFactors=T,header=T)
head(raw_data)
tost(x=raw_data$control, y=raw_data$treatment, alpha=0.05, epsilon=sd(na.omit(c(raw_data$control, raw_data$treatment))))
library(equivalnce)
raw_data <- read.csv(file.choose(),stringsAsFactors=T,header=T)
head(raw_data)
tost(x=raw_data$control, y=raw_data$treatment, alpha=0.05, epsilon=sd(na.omit(c(raw_data$control, raw_data$treatment))))
library(equivalnce)
raw_data <- read.csv(file.choose(),stringsAsFactors=T,header=T)
head(raw_data)
tost(x=raw_data$control, y=raw_data$treatment, alpha=0.05, epsilon=sd(na.omit(c(raw_data$control, raw_data$treatment))))
library(equivalnce)
raw_data <- read.csv(file.choose(),stringsAsFactors=T,header=T)
head(raw_data)
tost(x=raw_data$control, y=raw_data$treatment, alpha=0.05, epsilon=sd(na.omit(c(raw_data$control, raw_data$treatment))))
library(equivalnce)
raw_data <- read.csv(file.choose(),stringsAsFactors=T,header=T)
head(raw_data)
tost(x=raw_data$control, y=raw_data$treatment, alpha=0.05, epsilon=sd(na.omit(c(raw_data$control, raw_data$treatment))))
library(equivalnce)
raw_data <- read.csv(file.choose(),stringsAsFactors=T,header=T)
head(raw_data)
tost(x=raw_data$control, y=raw_data$treatment, alpha=0.05, epsilon=sd(na.omit(c(raw_data$control, raw_data$treatment))))
library(equivalnce)
raw_data <- read.csv(file.choose(),stringsAsFactors=T,header=T)
head(raw_data)
tost(x=raw_data$control, y=raw_data$treatment, alpha=0.05, epsilon=sd(na.omit(c(raw_data$control, raw_data$treatment))))
library(equivalnce)
raw_data <- read.csv(file.choose(),stringsAsFactors=T,header=T)
head(raw_data)
tost(x=raw_data$control, y=raw_data$treatment, alpha=0.05, epsilon=sd(na.omit(c(raw_data$control, raw_data$treatment))))
library(equivalnce)
raw_data <- read.csv(file.choose(),stringsAsFactors=T,header=T)
head(raw_data)
tost(x=raw_data$control, y=raw_data$treatment, alpha=0.05, epsilon=sd(na.omit(c(raw_data$control, raw_data$treatment))))
data <- read.csv(file.choose(),stringsAsFactors=T,header=T)
names(data)
summary(lm(data$lifetime_completed_trips ~ data$surges))
plot(data$lifetime_completed_trips,data$surges)
?ggplot
ggplot(data,aes(lifetime_completed_trips,surges))
ggplot(data,aes(lifetime_completed_trips,surges))+geom_point()
ggplot(data,aes(lifetime_completed_trips,surges))+geom_jitter()
ggplot(data,aes(lifetime_completed_trips,surges))+geom_point()
ggplot(data,aes(lifetime_completed_trips,surges,))+geom_point()+geom_smooth(method='lm',formula=surges~lifetime_completed_trips)
ggplot(data,aes(lifetime_completed_trips,surges,))+geom_point()+geom_smooth(method='lm',formula=data$surges~data$lifetime_completed_trips)
ggplot(data,aes(surges,lifetime_completed_trips))+geom_point()+stat_summary(fun.data=mean_cl_normal)+geom_smooth(method='lm',formula=data$lifetime_completed_trips~data$surges)
library(Hmisc)
install.packages("Hmisc")
library(Hmisc)
ggplot(data,aes(surges,lifetime_completed_trips))+geom_point()+stat_summary(fun.data=mean_cl_normal)+geom_smooth(method='lm',formula=data$lifetime_completed_trips~data$surges)
ggplot(data,aes(surges,lifetime_completed_trips))+geom_point()
ggplot(data,aes(surges,lifetime_completed_trips))+geom_point()+geom_smooth(method="lm")
summary(lm(data$lifetime_completed_trips ~ data$surges))
process_data <- function(data_set,x_varible,y_variable){
summary(lm(data_set[[y_variable]] ~ data_set[[x_variable]]))
}
process_data(data,surges,lifetime_completed_trips)
y_variable <- "lifetime_completed_trips"
x_variable <- "surges"
y_variable <- "lifetime_completed_trips"
x_variable <- "surges"
head(data[[y_variable]])
?lm
process_data <- function(data_set,x_varible,y_variable){
summary(lm(formula = y_variable ~ x_variable, data = data_set))
}
process_data(data,"surges","lifetime_completed_trips)
process_data(data,"surges","lifetime_completed_trips")
process_data("data","surges","lifetime_completed_trips")
summary(lm(formula = y_variable ~ x_variable, data = data))
summary(lm(formula = y_variable ~ x_variable, data = data))
summary(lm(formula = lifetime_completed_trips ~ surges, data = data))
process_data <- function(data_set,x_varible,y_variable){
head(data_set)
#   summary(lm(formula = y_variable ~ x_variable, data = data))
}
process_data("data","surges","lifetime_completed_trips")
process_data <- function(data_set,x_varible,y_variable){
head(data_set)
#   summary(lm(formula = y_variable ~ x_variable, data = data))
}
process_data(data,"surges","lifetime_completed_trips")
process_data <- function(data_set,x_varible,y_variable){
head(data_set)
head(data_set[[x_variable]])
head(data_set[[y_variable]])
#   summary(lm(formula = y_variable ~ x_variable, data = data))
}
process_data(data,"surges","lifetime_completed_trips")
head(data_set[[x_variable]])
data_set <- data
head(data_set[[x_variable]])
process_data <- function(data_set,x_varible,y_variable){
summary(lm(data_set[[y_variable]] ~ data_set[[x_variable]])
}
process_data <- function(data_set,x_varible,y_variable){
summary(lm(data_set[[y_variable]] ~ data_set[[x_variable]]))
}
process_data(data,"surges","lifetime_completed_trips")
process_data <- function(data_set, x_varible, y_variable){
summary(lm(data_set[[y_variable]] ~ data_set[[x_variable]]))
summary(aov(lm(data_set[[y_variable]] ~ data_set[[x_variable]]))
}
process_data(data,"surges","lifetime_completed_trips")
process_data <- function(data_set, x_varible, y_variable){
summary(lm(data_set[[y_variable]] ~ data_set[[x_variable]]))
summary(aov(data_set[[y_variable]] ~ data_set[[x_variable]]))
}
process_data(data,"surges","lifetime_completed_trips")
process_data <- function(data_set, x_varible, y_variable){
paste(summary(lm(data_set[[y_variable]] ~ data_set[[x_variable]])))
paste(summary(aov(data_set[[y_variable]] ~ data_set[[x_variable]])))
}
process_data(data,"surges","lifetime_completed_trips")
process_data <- function(data_set, x_varible, y_variable){
print(summary(lm(data_set[[y_variable]] ~ data_set[[x_variable]])))
print(summary(aov(data_set[[y_variable]] ~ data_set[[x_variable]])))
}
process_data(data,"surges","lifetime_completed_trips")
print(summary(aov(data_set[[y_variable]] ~ data_set[[x_variable]])))
remove(list=ls())
data <- read.csv(file.choose(),stringsAsFactors=T,header=T)
names(data)
process_data <- function(data_set, x_varible, y_variable){
print(summary(lm(data_set[[y_variable]] ~ data_set[[x_variable]])))
print(summary(aov(data_set[[y_variable]] ~ data_set[[x_variable]])))
}
process_data(data,"surges","lifetime_completed_trips")
process_data <- function(data_set, x_varible, y_variable){
print(summary(lm(data_set[[y_variable]] ~ data_set[[x_variable]])))
print(summary(aov(data_set[[y_variable]] ~ data_set[[x_variable]])))
}
process_data("data","surges","lifetime_completed_trips")
remove(data)
library(datasets)
data(airquality)
head(airquality)
datasets
1
1L
1/0
attributes(airquality)
class(airquality)
length(airquality)
vector(1:40)
vector(length=10)
swirl()
library(swirl)
swirl()
x <- 5+7
x
y<-x-3
y
z<-c(1.1,9,3.14)
z
?c()
?c
z
c(z,555,z)
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
c(1,2,3,4)+c(0,10,100)
z*2+100
z*2+1000
my_div
12
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
swirl()
swirl()
x<-factor(c("yes","yes","no","yes","no"))
x
unclass(x)
class(x)
class(y)
class(airquality)
colClass(airquality)
colClasses(airquality)
difftime(messaging_data[["first_messaged_timestamp"]],messaging_data[["first_active_timestamp"]],units="days")
remove(list=ls())
save.image()
q()
?Rscript
fromJSON("~/Downloads/LAX TEMP.json")
library(jsonlite)
fromJSON("~/Downloads/LAX TEMP.json")
names(fromJSON("~/Downloads/LAX TEMP.json"))
View(fromJSON("~/Downloads/LAX TEMP.json"))
fromJSON("~/Downloads/LAX TEMP.json")$geometry$coordinates
asdf<-fromJSON("~/Downloads/LAX TEMP.json")$geometry$coordinates
asdf
dim(asdf)
asdf<-data.frame(fromJSON("~/Downloads/LAX TEMP.json")$geometry$coordinates)
asdf
dim(asdf)
asdf[1:12]
min(asdf[1:12])
max(asdf[1:12])
min(asdf[13:24])
max(asdf[13:24])
package_loader<-function(package_names){
for(i in package_names){
if(!i %in% rownames(installed.packages())) install.packages(i, repos="http://cran.r-project.org")
library(i, character.only=T)
}
}
package_names<-c("data.table", "dplyr", "ggplot2", "knitr", "lubridate", "stringr", "tidyr", "xlsx")
package_loader(package_names)
sessionInfo()
