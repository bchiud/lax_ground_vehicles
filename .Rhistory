return(mean(err))
}
# calculate mean percentage error
get_mpe<-function(actuals, predicted){
err<-(actuals-predicted)/actuals
return(mean(err))
}
## @knitr parameters
validation_periods<-3
## @knitr data
# file.remove(file.path(work_dir, data_dir, "lax_ground_vehicle_traffic_volume.Rds"))
if(!file.exists(file.path(work_dir, data_dir, "lax_ground_vehicle_traffic_volume.Rds"))){
file_names<-c(
"Los_Angeles_International_Airport_-_Ground_Vehicle_Traffic_Volume.csv"
)
lax_ground_vehicle_traffic_volume<-get_data(file.path(work_dir, data_dir, file_names)) %>%
mutate(ReportingMonth=mdy_hms(ReportingMonth, tz="America/Los_Angeles")) %>%
dplyr::rename(reporting_month=ReportingMonth,
action=EntryExit,
level=UpperLower,
vehicles=TOTAL.VEHICLES) %>%
arrange(reporting_month, action, level)
saveRDS(lax_ground_vehicle_traffic_volume, file.path(work_dir, data_dir, "lax_ground_vehicle_traffic_volume.Rds"))
}else{
lax_ground_vehicle_traffic_volume<-readRDS(file.path(work_dir, data_dir, "lax_ground_vehicle_traffic_volume.Rds"))
}
## @knitr data_sanity_check_1
lax_ground_vehicle_traffic_volume %>%
group_by(reporting_month, action) %>%
summarize(vehicles=sum(vehicles)) %>%
ungroup() %>%
ggplot(aes(x=reporting_month, y=vehicles, color=action, group=action))+
geom_line(size=1)+
scale_x_datetime(name="Reporting Month",
date_minor_breaks="1 months")+
scale_y_continuous(name="Vehicles",
breaks=seq(0,10000000,500000),
labels=format(seq(0,10000000,500000), big.mark=",", scientific=F))+
scale_color_discrete(name="Action")+
theme()
## @knitr data_sanity_check_2
lax_ground_vehicle_traffic_volume %>%
filter(year(reporting_month)==2014,
month(reporting_month)==4) %>%
get_table()
## @knitr data_sanity_check_3
lax_ground_vehicle_traffic_volume_edit_1<-lax_ground_vehicle_traffic_volume %>%
unique()
lax_ground_vehicle_traffic_volume_edit_1 %>%
filter(year(reporting_month)==2014,
month(reporting_month)==4) %>%
get_table()
## @knitr data_sanity_check_4
mean_exit_entry_delta<-lax_ground_vehicle_traffic_volume_edit_1 %>%
group_by(reporting_month, action) %>%
summarize(vehicles=sum(vehicles)) %>%
ungroup() %>%
spread(action, vehicles) %>%
mutate(exit_entry_delta=ifelse(Exit>Entry, Exit-Entry, NA)) %>%
.$exit_entry_delta %>%
mean(na.rm=T)
lax_ground_vehicle_traffic_volume_edit_2<-lax_ground_vehicle_traffic_volume_edit_1 %>%
group_by(reporting_month, action) %>%
summarize(vehicles=sum(vehicles)) %>%
ungroup() %>%
spread(action, vehicles) %>%
mutate(Exit=ifelse(reporting_month==ymd("2014-09-01", tz="America/Los_Angeles"), Entry+mean_exit_entry_delta, Exit)) %>%
gather(action, vehicles, -reporting_month)
lax_ground_vehicle_traffic_volume_edit_2 %>%
ggplot(aes(x=reporting_month, y=vehicles, color=action, group=action))+
geom_line(size=1)+
scale_x_datetime(name="Reporting Month",
date_minor_breaks="1 months")+
scale_y_continuous(name="Vehicles",
breaks=seq(0,10000000,500000),
labels=format(seq(0,10000000,500000), big.mark=",", scientific=F))+
scale_color_discrete(name="Action")
## @knitr data_sanity_check_5
lax_ground_vehicle_traffic_volume_cleaned<-lax_ground_vehicle_traffic_volume_edit_2 %>%
group_by(reporting_month) %>%
summarize(vehicles=max(vehicles)) %>%
ungroup()
lax_ground_vehicle_traffic_volume_cleaned %>%
ggplot(aes(x=reporting_month, y=vehicles))+
geom_line(size=1)+
scale_x_datetime(name="Reporting Month",
date_minor_breaks="1 months")+
scale_y_continuous(name="Vehicles",
breaks=seq(0,10000000,500000),
labels=format(seq(0,10000000,500000), big.mark=",", scientific=F))
## @knitr data_setup
lax_vehicles<-lax_ground_vehicle_traffic_volume_cleaned %>%
mutate(dataset=ifelse(row_number()<=nrow(.)-validation_periods, "training", "test"))
lax.training<-lax_vehicles %>%
filter(dataset=="training") %>%
dplyr::select(-dataset)
lax.test<-lax_vehicles %>%
filter(dataset=="test") %>%
dplyr::select(-dataset)
lax_vehicles %>%
ggplot(aes(x=reporting_month, y=vehicles, color=dataset))+
geom_line(size=1)+
ggtitle("Data Setup")+
scale_x_datetime(name="Reporting Month")+
scale_y_continuous(name="Vehicles",
breaks=seq(-1000000,1000000,250000),
labels=format(seq(-1000000,1000000,250000), big.mark=",", scientific=F))
## @knitr exploring_patterns
lax.training %>%
mutate(month=factor(format(reporting_month ,"%b"), level=c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))) %>%
ggplot(aes(x=month, y=vehicles, color=month))+
geom_boxplot()+
scale_x_discrete(name="Month")+
scale_y_continuous(name="Vehicles",
breaks=seq(0,4000000,200000),
labels=format(seq(0,4000000,200000), big.mark=",", scientific=F))+
theme(legend.position="none")
## @knitr time_series_setup
lax.training %>%
mutate(diff1=vehicles-dplyr::lag(vehicles, 1)) %>%
ggplot(aes(x=reporting_month, y=diff1))+
geom_line(size=1)+
ggtitle("Month-to-Month Change")+
scale_x_datetime(name="Reporting Month")+
scale_y_continuous(name="Vehicles",
breaks=seq(-1000000,1000000,250000),
labels=format(seq(-1000000,1000000,250000), big.mark=",", scientific=F))
pacf(diff(lax.training$vehicles),
lag.max=sum(!is.na(lax.training$vehicles)))
adf(diff(lax.training$vehicles), alternative="stationary")
adf.test(diff(lax.training$vehicles), alternative="stationary")
adf.test(lax.training$vehicles, alternative="stationary")
lax.training$vehicles
adf.test(diff(lax.training$vehicles), alternative="stationary")
?pacf
acf(diff(lax.training$vehicles),
lag.max=sum(!is.na(lax.training$vehicles)))
pacf(diff(lax.training$vehicles),
lag.max=sum(!is.na(lax.training$vehicles)))
acf(diff(lax.training$vehicles),
lag.max=sum(!is.na(lax.training$vehicles)))
pacf(diff(lax.training$vehicles),
lag.max=sum(!is.na(lax.training$vehicles)))
adf.test(diff(lax.training$vehicles), alternative="stationary")
acf(diff(lax.training$vehicles),
lag.max=sum(!is.na(lax.training$vehicles)))
lax.training %>%
mutate(month=factor(format(reporting_month ,"%b"), level=c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))) %>%
ggplot(aes(x=month, y=vehicles, color=month))+
geom_boxplot()+
scale_x_discrete(name="Month")+
scale_y_continuous(name="Vehicles",
breaks=seq(0,4000000,200000),
labels=format(seq(0,4000000,200000), big.mark=",", scientific=F))+
theme(legend.position="none")
lax.training %>%
mutate(diff1=vehicles-dplyr::lag(vehicles, 1)) %>%
ggplot(aes(x=reporting_month, y=diff1))+
geom_line(size=1)+
ggtitle("Month-to-Month Change")+
scale_x_datetime(name="Reporting Month")+
scale_y_continuous(name="Vehicles",
breaks=seq(-1000000,1000000,250000),
labels=format(seq(-1000000,1000000,250000), big.mark=",", scientific=F))
?adf.test
pacf(diff(lax.training$vehicles),
lag.max=sum(!is.na(lax.training$vehicles)))
acf(diff(lax.training$vehicles),
lag.max=sum(!is.na(lax.training$vehicles)))
pacf(diff(lax.training$vehicles),
lag.max=sum(!is.na(lax.training$vehicles)))
acf(diff(lax.training$vehicles),
lag.max=sum(!is.na(lax.training$vehicles)))
pacf(diff(lax.training$vehicles),
lag.max=sum(!is.na(lax.training$vehicles)))
acf(diff(lax.training$vehicles),
lag.max=sum(!is.na(lax.training$vehicles)))
acf(diff(lax.training$vehicles),
lag.max=sum(!is.na(lax.training$vehicles)))
fit1 <- arima(ts(lax.training$vehicles, frequency=12), order=c(0,0,1), seasonal=c(0,1,1))
fit1
tsdisplay(residuals(fit1), main="Residuals from fitted ARIMA(1,0,0)(1,1,0) model for trips data")
tsdisplay(residuals(fit1), main="Residuals from fitted ARIMA(0,0,1)(0,1,1) model for trips data")
fit1 <- arima(ts(lax.training$vehicles, frequency=12), order=c(0,0,1), seasonal=c(0,1,0))
fit1
tsdisplay(residuals(fit1), main="Residuals from fitted ARIMA(0,0,1)(0,1,1) model for trips data")
?arima
tsdisplay(diff(lax.training$vehicles, 12))
tsdisplay(diff(lax.training$vehicles)))
tsdisplay(diff(lax.training$vehicles))
tsdisplay(diff(lax.training$vehicles, 12))
plot(lax.training$vehicles)
plot(lax.training$vehicles, type="l")
tsdisplay(diff(lax.training$vehicles, 12))
fit1 <- arima(ts(lax.training$vehicles, frequency=1), order=c(0,1,1), seasonal=c(0,1,0))
fit1
tsdisplay(residuals(fit1), main="Residuals from fitted ARIMA(0,0,1)(0,1,1) model for trips data")
We see relatively strong 12 month seasonality:
acf(lax.training$vehicles,
lag.max=sum(!is.na(lax.training$vehicles)))
tsdisplay(diff(lax.training$vehicles, 12))
tsdisplay(diff(lax.training$vehicles, 1))
tsdisplay(diff(lax.training$vehicles, 12))
tsdisplay(diff(lax.training$vehicles))
tsdisplay(diff(lax.training$vehicles))
tsdisplay(diff(lax.training$vehicles, 12))
tsdisplay(diff(lax.training$vehicles))
forecast_validation
forecast_validation %>%
get_table(4)
?box.test
??box.test
Box.test(diff(lax.training$vehicles),
lag=sum(!is.na(lax.training$vehicles)),
type="Ljung-Box")
Box.test(diff(lax.training$vehicles),
lag=20,
type="Ljung-Box")
adf.test(diff(lax.training$vehicles), alternative="stationary")
kpss.test(diff(lax.training$vehicles))
?kpss.test
lax.ts12<-ts(lax.training$vehicles, frequency=12, start=c(year(min(lax.training$reporting_month)),
month(min(lax.training$reporting_month))))
?tsdisplay
tsdisplay(diff(lax.training$vehicles, 12), lag.max=20)
tsdisplay(diff(lax.training$vehicles), lag.max=20)
tsdisplay(diff(lax.training$vehicles), lag.max=20)
tsdisplay(diff(lax.training$vehicles, 12), lag.max=20)
fit1 <- arima(ts(lax.training$vehicles, frequency=1), order=c(0,1,1), seasonal=c(0,1,1))
fit1
tsdisplay(residuals(fit1), main="Residuals from fitted ARIMA(0,0,1)(0,1,1) model for trips data")
fit1 <- arima(ts(lax.training$vehicles, frequency=1), order=c(0,1,0), seasonal=c(0,1,1))
fit1
tsdisplay(residuals(fit1), main="Residuals from fitted ARIMA(0,1,0)(0,1,1) model for trips data")
tsdisplay(diff(lax.training$vehicles, 12), lag.max=20)
fit1 <- arima(ts(lax.training$vehicles, frequency=1), order=c(0,1,0), seasonal=c(1,1,0))
fit1
tsdisplay(residuals(fit1), main="Residuals from fitted ARIMA(0,1,0)(0,1,1) model for trips data")
tsdisplay(diff(lax.training$vehicles, 12), lag.max=20)
tsdisplay(diff(lax.training$vehicles), lag.max=20)
tsdisplay(diff(lax.training$vehicles, 12), lag.max=20)
tsdisplay(diff(lax.training$vehicles, 12), lag.max=20)
tsdisplay(diff(lax.training$vehicles), lag.max=20)
tsdisplay(diff(lax.training$vehicles), lag.max=20)
tsdisplay(diff(lax.training$vehicles, 12), lag.max=20)
fit1 <- arima(ts(lax.training$vehicles, frequency=1), order=c(0,1,0), seasonal=c(1,1,0))
fit1
tsdisplay(residuals(fit1), main="Residuals from fitted ARIMA(0,1,0)(0,1,1) model for trips data")
tsdisplay(diff(lax.training$vehicles), lag.max=20)
tsdisplay(diff(lax.training$vehicles, 12), lag.max=20)
tsdisplay(diff(lax.training$vehicles), lag.max=20)
tsdisplay(diff(lax.training$vehicles, 12), lag.max=20)
diff(lax.training$vehicles, 12)
fit1 <- arima(ts(lax.training$vehicles, frequency=12), order=c(0,1,0), seasonal=c(1,1,0))
fit1
tsdisplay(residuals(fit1), main="Residuals from fitted ARIMA(0,1,0)(0,1,1) model for trips data")
tsdisplay(diff(lax.training$vehicles, 12), lag.max=20)
fit1 <- arima(ts(lax.training$vehicles, frequency=12), order=c(0,1,0), seasonal=c(1,1,0))
fit1
tsdisplay(residuals(fit1), main="Residuals from fitted ARIMA(0,1,0)(0,1,1) model for trips data")
fit1 <- arima(ts(lax.training$vehicles, frequency=12), order=c(0,1,0), seasonal=c(1,1,0))
fit1
tsdisplay(residuals(fit1), main="Residuals from fitted ARIMA(0,1,0)(1,1,0)")
?tsdisplay
fit1 <- arima(ts(lax.training$vehicles, frequency=12), order=c(0,1,0), seasonal=c(1,1,0))
fit1
tsdisplay(residuals(fit1), main="Residuals from fitted ARIMA(0,1,0)(1,1,0)", lag.max=30)
fit1 <- arima(ts(lax.training$vehicles, frequency=12), order=c(0,1,0), seasonal=c(1,1,0))
fit1
tsdisplay(residuals(fit1), main="Residuals from fitted ARIMA(0,1,0)(1,1,0)", lag.max=30)
fit1 <- arima(ts(lax.training$vehicles, frequency=12), order=c(0,1,1), seasonal=c(0,1,0))
fit1
tsdisplay(residuals(fit1), main="Residuals from fitted ARIMA(0,1,1)(0,1,0)", lag.max=30)
fit1 <- arima(ts(lax.training$vehicles, frequency=12), order=c(0,1,0), seasonal=c(0,1,0))
fit1
tsdisplay(residuals(fit1), main="Residuals from fitted ARIMA(0,1,0)(0,1,0)", lag.max=30)
fit1 <- arima(ts(lax.training$vehicles, frequency=12), order=c(0,1,1), seasonal=c(0,1,0))
fit1
tsdisplay(residuals(fit1), main="Residuals from fitted ARIMA(0,1,1)(0,1,0)", lag.max=30)
fit1 <- arima(ts(lax.training$vehicles, frequency=12), order=c(0,1,0), seasonal=c(0,1,0))
fit1
tsdisplay(residuals(fit1), main="Residuals from fitted ARIMA(0,1,0)(0,1,0)", lag.max=30)
tsdisplay(diff(lax.training$vehicles, 12), lag.max=20)
fit1 <- arima(ts(lax.training$vehicles, frequency=12), order=c(0,1,0), seasonal=c(0,1,0))
fit1
tsdisplay(residuals(fit1), main="Residuals from fitted ARIMA(0,1,0)(0,1,0)", lag.max=30)
fit2 <- arima(ts(lax.training$vehicles, frequency=12), order=c(0,1,1), seasonal=c(0,1,0))
fit2
tsdisplay(residuals(fit2), main="Residuals from fitted ARIMA(0,1,1)(0,1,0)", lag.max=30)
fit1 <- arima(ts(lax.training$vehicles, frequency=12), order=c(0,1,0), seasonal=c(0,1,0))
fit1
tsdisplay(residuals(fit1), main="Residuals from fitted ARIMA(0,1,0)(0,1,0)", lag.max=30)
fit2 <- arima(ts(lax.training$vehicles, frequency=12), order=c(0,1,1), seasonal=c(0,1,0))
fit2
tsdisplay(residuals(fit2), main="Residuals from fitted ARIMA(0,1,1)(0,1,0)", lag.max=30)
?auto.arima
fit2 <- arima(ts(lax.training$vehicles, frequency=12), order=c(0,1,1), seasonal=c(0,1,0))
fit2
tsdisplay(residuals(fit2), main="Residuals from fitted ARIMA(0,1,1)(0,1,0)", lag.max=30)
lax.hw
lax.hw.fcast
lax.stl.fcast
lax.stl.predict
stl_validation<-data.frame(model="STL",
mae=get_mae(lax.stl.predict$actuals, lax.stl.predict$predicted),
mape=get_mape(lax.stl.predict$actuals, lax.stl.predict$predicted),
mse=get_mse(lax.stl.predict$actuals, lax.stl.predict$predicted),
mpe=get_mpe(lax.stl.predict$actuals, lax.stl.predict$predicted),
stringsAsFactors=F)
stl_validation<-data.frame(model="STL",
mae=get_mae(lax.stl.predict$actuals, lax.stl.predict$predicted),
mape=get_mape(lax.stl.predict$actuals, lax.stl.predict$predicted),
mse=get_mse(lax.stl.predict$actuals, lax.stl.predict$predicted),
mpe=get_mpe(lax.stl.predict$actuals, lax.stl.predict$predicted),
stringsAsFactors=F)
stl_validation %>%
get_table(4)
forecast_validation<-stl_validation
hw_validation<-data.frame(model="Holt-Winters",
mae=get_mae(lax.hw.predict$actuals, lax.hw.predict$predicted),
mape=get_mape(lax.hw.predict$actuals, lax.hw.predict$predicted),
mse=get_mse(lax.hw.predict$actuals, lax.hw.predict$predicted),
mpe=get_mpe(lax.hw.predict$actuals, lax.hw.predict$predicted))
hw_validation %>%
get_table(4)
forecast_validation<-forecast_validation %>%
bind_rows(hw_validation)
lax_ground_vehicle_traffic_volume_cleaned
lax.fcast<-data.frame(forecast.stl(lax.stl, h=24+validation_periods, method="ets"))
lax.fcast %>%
get_table()
lax.predict<-lax.test %>%
dplyr::rename(actuals=vehicles) %>%
mutate(predicted=lax.stl.fcast$Point.Forecast)
lax.predict<-lax.test %>%
dplyr::rename(actuals=vehicles) %>%
mutate(predicted=lax.fcast$Point.Forecast)
lax.training %>%
dplyr::rename(actuals=vehicles) %>%
gather(metric, value, -reporting_month) %>%
bind_rows(lax.predict %>%
gather(metric, value, -reporting_month)) %>%
ggplot(aes(x=reporting_month, y=value,
color=factor(metric,
levels=c("predicted", "actuals"))))+
geom_line(size=1)+
ggtitle("STL Decomposition Validation")+
scale_x_datetime(name="Reporting Month",
date_minor_breaks="2 months")+
scale_y_continuous(name="Vehicles",
breaks=seq(0,10000000,500000),
labels=format(seq(0,10000000,500000), big.mark=",", scientific=F))+
scale_color_hue(name="")
forecast_validation %>%
get_table()
lax.fcast<-data.frame(forecast.stl(lax.stl, h=24+validation_periods, method="ets"))
lax.fcast %>%
get_table()
lax.predict<-lax.test %>%
dplyr::rename(actuals=vehicles) %>%
mutate(predicted=lax.fcast$Point.Forecast)
lax.test %>%
dplyr::rename(actuals=vehicles)
lax_vehicles
lax_ground_vehicle_traffic_volume_cleaned
lax.predict
lax.fcast
row.names(lax.fcast)
as.Date(row.names(lax.fcast))
?month.abb
month.abb
?str_slit
?str_split
str_slit(row.names(lax.fcast), "-")
str_split(row.names(lax.fcast), "-")
str_split(row.names(lax.fcast), " ")
paste("01", str_split(row.names(lax.fcast), " "), sep="-")
?split
?gsub
gsub(" ", "-", paste("01", row.names(lax.fcast), sep="-"))
?as.Date
as.Date(gsub(" ", "-", paste("01", row.names(lax.fcast), sep="-")), format="%d-%b-%Y")
class(as.Date(gsub(" ", "-", paste("01", row.names(lax.fcast), sep="-")), format="%d-%b-%Y"))
lax.predict
lax.training
lax.training %>%
dplyr::rename(actuals=vehicles) %>%
gather(metric, value, -reporting_month)
lax.fcast
lax.training %>%
dplyr::rename(actuals=vehicles) %>%
gather(metric, value, -reporting_month) %>%
bind_rows(data.frame(reporting_month=as.Date(gsub(" ", "-", paste("01", row.names(lax.fcast), sep="-")), format="%d-%b-%Y"),
metric="predicted",
value=lax.fcast$Point.Forecast))
lax.training %>%
dplyr::rename(actuals=vehicles) %>%
gather(metric, value, -reporting_month)
reporting_month=as.Date(gsub(" ", "-", paste("01", row.names(lax.fcast), sep="-")), format="%d-%b-%Y"),
metric="predicted",
value=lax.fcast$Point.Forecast)
data.frame(reporting_month=as.Date(gsub(" ", "-", paste("01", row.names(lax.fcast), sep="-")), format="%d-%b-%Y"),
metric="predicted",
value=lax.fcast$Point.Forecast)
sapply(data.frame(reporting_month=as.Date(gsub(" ", "-", paste("01", row.names(lax.fcast), sep="-")), format="%d-%b-%Y"),
metric="predicted",
value=lax.fcast$Point.Forecast), class)
sapply(lax.training %>%
dplyr::rename(actuals=vehicles) %>%
gather(metric, value, -reporting_month), class)
?as.Date
data.frame(reporting_month=strptime(gsub(" ", "-", paste("01", row.names(lax.fcast), sep="-")), format="%d-%b-%Y"),
metric="predicted",
value=lax.fcast$Point.Forecast)
sapply(data.frame(reporting_month=strptime(gsub(" ", "-", paste("01", row.names(lax.fcast), sep="-")), format="%d-%b-%Y"),
metric="predicted",
value=lax.fcast$Point.Forecast), class)
lax.training %>%
dplyr::rename(actuals=vehicles) %>%
gather(metric, value, -reporting_month) %>%
bind_rows(data.frame(reporting_month=strptime(gsub(" ", "-", paste("01", row.names(lax.fcast), sep="-")), format="%d-%b-%Y"),
metric="predicted",
value=lax.fcast$Point.Forecast))
lax.training %>%
dplyr::rename(actuals=vehicles) %>%
gather(metric, value, -reporting_month) %>%
bind_rows(data.frame(reporting_month=strptime(gsub(" ", "-", paste("01", row.names(lax.fcast), sep="-")), format="%d-%b-%Y"),
metric="predicted",
value=lax.fcast$Point.Forecast)) %>%
ggplot(aes(x=reporting_month, y=value,
color=factor(metric,
levels=c("predicted", "actuals"))))+
geom_line(size=1)+
ggtitle("STL Decomposition Validation")+
scale_x_datetime(name="Reporting Month",
date_minor_breaks="2 months")+
scale_y_continuous(name="Vehicles",
breaks=seq(0,10000000,500000),
labels=format(seq(0,10000000,500000), big.mark=",", scientific=F))+
scale_color_hue(name="")
lax_ground_vehicle_traffic_volume_cleaned
lax_ground_vehicle_traffic_volume_cleaned %>%
dplyr::rename(actuals=vehicles) %>%
gather(metric, value, -reporting_month) %>%
bind_rows(data.frame(reporting_month=strptime(gsub(" ", "-", paste("01", row.names(lax.fcast), sep="-")), format="%d-%b-%Y"),
metric="predicted",
value=lax.fcast$Point.Forecast)) %>%
ggplot(aes(x=reporting_month, y=value,
color=factor(metric,
levels=c("predicted", "actuals"))))+
geom_line(size=1)+
ggtitle("STL Decomposition Validation")+
scale_x_datetime(name="Reporting Month",
date_minor_breaks="2 months")+
scale_y_continuous(name="Vehicles",
breaks=seq(0,10000000,500000),
labels=format(seq(0,10000000,500000), big.mark=",", scientific=F))+
scale_color_hue(name="")
lax_forecast_data<-data.frame(reporting_month=strptime(gsub(" ", "-", paste("01", row.names(lax.fcast), sep="-")), format="%d-%b-%Y"),
metric="predicted",
value=lax.fcast$Point.Forecast)
lax_forecasted
lax_forecasted<-data.frame(reporting_month=strptime(gsub(" ", "-", paste("01", row.names(lax.fcast), sep="-")), format="%d-%b-%Y"),
metric="predicted",
value=lax.fcast$Point.Forecast)
lax_forecasted
lax_forecasted %>%
dplyr::select(-metric) %>%
get_table()
lax_ground_vehicle_traffic_volume_cleaned %>%
dplyr::rename(actuals=vehicles) %>%
gather(metric, value, -reporting_month) %>%
bind_rows() %>%
ggplot(aes(x=reporting_month, y=value,
color=factor(metric,
levels=c("predicted", "actuals"))))+
geom_line(size=1)+
ggtitle("LAX Ground Vehicle Forecast")+
scale_x_datetime(name="Reporting Month",
date_minor_breaks="2 months")+
scale_y_continuous(name="Vehicles",
breaks=seq(0,10000000,500000),
labels=format(seq(0,10000000,500000), big.mark=",", scientific=F))+
scale_color_hue(name="")
lax_forecasted<-data.frame(reporting_month=strptime(gsub(" ", "-", paste("01", row.names(lax.fcast), sep="-")), format="%d-%b-%Y"),
metric="predicted",
value=lax.fcast$Point.Forecast)
lax_forecasted %>%
dplyr::select(-metric) %>%
get_table()
lax_ground_vehicle_traffic_volume_cleaned %>%
dplyr::rename(actuals=vehicles) %>%
gather(metric, value, -reporting_month) %>%
bind_rows(lax_forecasted) %>%
ggplot(aes(x=reporting_month, y=value,
color=factor(metric,
levels=c("predicted", "actuals"))))+
geom_line(size=1)+
ggtitle("LAX Ground Vehicle Forecast")+
scale_x_datetime(name="Reporting Month",
date_minor_breaks="2 months")+
scale_y_continuous(name="Vehicles",
breaks=seq(0,10000000,500000),
labels=format(seq(0,10000000,500000), big.mark=",", scientific=F))+
scale_color_hue(name="")
lax_forecasted
lax_forecasted %>%
filter(year(reporting_month)=="2017")
lax_forecasted %>%
filter(year(reporting_month)=="2017") %>%
group_by(year(reporting_month)) %>%
summarize(vehicles=sum(value))
